<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Loja Virtual</title>
    @Styles.Render("~/bundles/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @using SM.UI.Mvc.Classes.toastr
    @RenderSection("header", required: false)
    @Scripts.Render("~/bundles/jquery")
    @RenderSection("scripts", required: false)
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Loja Virtual", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Usuários", "Index", "Usuarios")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">

        <!-- Modal generica - Basta passar dados e tan dan dan dan By: Sergio -->
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Counteúdo-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" onclick="limpaModal();" class="close" data-dismiss="modal">&times;</button>
                        <h4 id="tituloModal" class="modal-title"></h4>
                    </div>
                    <div id="conteudoModal" class="modal-body">

                    </div>
                    <div id="footerModal" class="modal-footer">
                        
                    </div>
                </div>
            </div>
        </div>

        @RenderBody()

    </div>

    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/site")

    @* Recepção e tratamento da Mensagem enviada pelo backend *@
    @if (TempData.ContainsKey("Toastr"))
    {
        Toastr toastr = TempData["Toastr"] as Toastr;
        <script>
            var str = @Html.Raw(Json.Encode(toastr));
            for (var i = 0; i < str.ToastMessages.length; i++)
            {
                objMensagem = new Mensagem();
                objMensagem.MostrarMensagem(str.ToastMessages[i].Message, str.ToastMessages[i].Title, str.ToastMessages[i].ToastType, str.ToastMessages[i].IsSticky);
            }
        </script>
    }
    <script>
            // Deixa um objeto de Mensagem sempre criado na master para ser utilizado a qualquer momento.
            var objMensagem = new Mensagem();
    </script>
</body>
</html>
